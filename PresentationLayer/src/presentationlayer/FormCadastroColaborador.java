package presentationlayer;

import businessLogicalLayer.BairroBLL;
import businessLogicalLayer.CidadeBLL;
import businessLogicalLayer.ClinicaBLL;
import businessLogicalLayer.ColaboradorBLL;
import businessLogicalLayer.EnderecoBLL;
import businessLogicalLayer.EstadoBLL;
import businessLogicalLayer.FuncaoBLL;
import businessLogicalLayer.LogradouroBLL;
import businessLogicalLayer.PaisBLL;
import domain.Clinica;
import domain.Colaborador;
import domain.Endereco;
import domain.Logradouro;
import domain.Bairro;
import domain.Cidade;
import domain.Estado;
import domain.Pais;
import domain.Funcao;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Sabrina e Marciele
 */
public class FormCadastroColaborador extends javax.swing.JFrame {

    private Colaborador lastColaborador;
    private String lastNome;
    private String lastCro;
    private String lastCroEstado;
    private LocalDate lastDtAdmissao;
    private LocalDate lastDtDemissao;
    private Endereco lastEndereco;
    private Funcao lastFuncao;
    private Clinica lastClinica;
    private boolean lastFerias;
    private boolean lastDemitido;

    private DefaultTableModel model;

    PaisBLL srvPais = new PaisBLL();
    EstadoBLL srvEstado = new EstadoBLL();
    CidadeBLL srvCidade = new CidadeBLL();
    BairroBLL srvBairro = new BairroBLL();
    EnderecoBLL srvEndereco = new EnderecoBLL();
    LogradouroBLL srvLogradouro = new LogradouroBLL();
    ColaboradorBLL srvColaborador = new ColaboradorBLL();
    ClinicaBLL srvClinica = new ClinicaBLL();
    FuncaoBLL srvFuncao = new FuncaoBLL();

    /**
     * Creates new form frmCadastroColaborador
     */
    public FormCadastroColaborador() {
        initComponents();
        model = new DefaultTableModel();
        grdColaborador.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNomeCompleto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cmbPais = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox<>();
        cmbFuncao = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        ftxtCEP = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        ftxtCRO = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbEstadoCRO = new javax.swing.JComboBox<>();
        btnSalvar = new javax.swing.JButton();
        cmbClinica = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        ftxtTelefone = new javax.swing.JFormattedTextField();
        ftxtCelular = new javax.swing.JFormattedTextField();
        chkFerias = new javax.swing.JCheckBox();
        ftxtDataAdmissao = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        ftxtDataDemissao = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        chkDemitido = new javax.swing.JCheckBox();
        cmbLogradouro = new javax.swing.JComboBox<>();
        cmbBairro = new javax.swing.JComboBox<>();
        cmbCidade = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        grdColaborador = new javax.swing.JTable();
        btnAtualizar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        lblMensagem = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Colaborador");

        jLabel3.setText("Nome Completo ");

        jLabel7.setText("Telefone ");

        jLabel11.setText("CEP ");

        jLabel12.setText("Logradouro");

        jLabel13.setText("N° ");

        jLabel14.setText("Bairro");

        jLabel15.setText("Cidade");

        jLabel16.setText("Estado");

        jLabel17.setText("País");

        jLabel18.setText("Celular ");

        jLabel2.setText("Função");

        jLabel5.setText("CRO");

        jLabel6.setText("Estado do CRO");

        btnSalvar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jLabel8.setText("Clínica");

        chkFerias.setText("Férias");

        jLabel9.setText("Data Admissão");

        jLabel10.setText("Data Demissão");

        chkDemitido.setText("Demitido");

        grdColaborador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        grdColaborador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grdColaboradorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grdColaborador);
        grdColaborador.getAccessibleContext().setAccessibleParent(jPanel1);

        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnDeletar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbPais, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNomeCompleto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(209, 209, 209))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cmbClinica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ftxtTelefone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftxtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbBairro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(jLabel13))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(144, 144, 144)
                                .addComponent(jLabel18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(87, 87, 87)
                                .addComponent(jLabel16)
                                .addGap(110, 110, 110)
                                .addComponent(jLabel15))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel12))
                            .addComponent(jLabel11)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ftxtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ftxtCRO, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSalvar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbEstadoCRO, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAtualizar)
                                        .addGap(44, 44, 44)
                                        .addComponent(btnDeletar))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ftxtDataAdmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ftxtDataDemissao, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkFerias)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkDemitido)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftxtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtDataAdmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftxtDataDemissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkFerias)
                            .addComponent(chkDemitido))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtCRO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEstadoCRO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(85, 85, 85)
                .addComponent(lblMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            addAllListener();
            preencheGrid();
            preencheCombo();
        } catch (SQLException ex) {
            Logger.getLogger(FormCadastroColaborador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            if (cmbBairro.getSelectedItem() == null || txtNomeCompleto.getText().equals("") || ftxtCPF.getText().equals("") || ftxtRG.getText().equals("") || ftxtCRO.getText().equals("") || txtNumero.getText().equals("") || ftxtDataAdmissao.getText().equals("")) {
                return;
            }

            String retorno = srvColaborador.insert(new Colaborador(0, txtNomeCompleto.getText(), LocalDate.parse(ftxtDataAdmissao.getText()), (Endereco) cmbEndereco.getSelectedItem()));
            lblMensagem.setText(retorno);
            lblMensagem.setForeground(new Color(0, 102, 0));
            preencheGrid();
            deselecionaCombo();
            limpaCampos();
        } catch (SQLException ex) {
            Logger.getLogger(FormCadastroColaborador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try {
            if (cmbBairro.getSelectedItem() != null && !txtNomeCompleto.getText().equals("") && !ftxtDataAdmissao.getText().equals("") && (!lastEndereco.equals(cmbEndereco.getSelectedItem())
                    || !lastDtAdmissao.equals(ftxtDataAdmissao.getText()) || !lastClinica.equals(txtNomeCompleto.getText()) || !lastNome.equals(txtNomeCompleto.getText())) && lastClinica != null) {

                String retorno = srvColaborador.update(new Colaborador(lastColaborador.getId(), txtNomeCompleto.getText(), ftxtCPF.getText(), ftxtRG.getText(), (Funcao) cmbFuncao.getSelectedItem(),
                        (Clinica) cmbClinica.getSelectedItem(), ftxtTelefone.getText(), ftxtCelular.getText(), (Endereco) cmbEndereco.getSelectedItem(),
                        LocalDate.parse(ftxtDataAdmissao.getText()), LocalDate.parse(ftxtDataDemissao.getText()), ftxtCRO.getText()));
                lblMensagem.setText(retorno);
                lblMensagem.setForeground(Color.BLUE);
                preencheGrid();
                deselecionaCombo();
                limpaCampos();
                preenchePais();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormCadastroColaborador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        try {
            if (lastColaborador != null) {
                lblMensagem.setText(srvColaborador.delete(lastColaborador));
                lblMensagem.setForeground(Color.RED);
                preencheGrid();
                deselecionaCombo();
                limpaCampos();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormCadastroColaborador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void grdColaboradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grdColaboradorMouseClicked
        try {
            int row = grdColaborador.getSelectedRow();
            TableModel model = grdColaborador.getModel();

            int id = (int) model.getValueAt(row, 0);

            String nome = (String) model.getValueAt(row, 1);
            txtNomeCompleto.setText(nome);

            String cpf = (String) model.getValueAt(row, 2);
            ftxtCPF.setText(cpf);

            String rg = (String) model.getValueAt(row, 3);
            ftxtCRO.setText(rg);

            String telefone = (String) model.getValueAt(row, 6);
            ftxtTelefone.setText(telefone);

            String celular = (String) model.getValueAt(row, 7);
            ftxtCelular.setText(celular);

            String cro = (String) model.getValueAt(row, 5);
            txtNomeCompleto.setText(cro);

            String croEstado = (String) model.getValueAt(row, 4);
            txtNomeCompleto.setText(croEstado);

            LocalDate dataAdmissao = (LocalDate) model.getValueAt(row, 2);
            ftxtDataAdmissao.setText(dataAdmissao.toString());

            LocalDate dataDemissao = (LocalDate) model.getValueAt(row, 2);
            ftxtDataDemissao.setText(dataDemissao.toString());

            Pais pais = (Pais) model.getValueAt(row, 8);
            cmbPais.getModel().setSelectedItem(pais);
            preencheEstado();

            Estado estado = (Estado) model.getValueAt(row, 7);
            cmbEstado.getModel().setSelectedItem(estado);
            preencheCidade();

            Cidade cidade = (Cidade) model.getValueAt(row, 6);
            cmbCidade.getModel().setSelectedItem(cidade);
            preencheBairro();

            Bairro bairro = (Bairro) model.getValueAt(row, 5);
            cmbBairro.getModel().setSelectedItem(bairro);

            Logradouro logradouro = (Logradouro) model.getValueAt(row, 4);
            cmbLogradouro.getModel().setSelectedItem(logradouro);

            Endereco endereco = (Endereco) model.getValueAt(row, 3);
            cmbEndereco.getModel().setSelectedItem(endereco);

            Funcao funcao = (Funcao) model.getValueAt(row, 4);
            cmbFuncao.getModel().setSelectedItem(funcao);
            preencheFuncao();

            Clinica clinica = (Clinica) model.getValueAt(row, 5);
            cmbFuncao.getModel().setSelectedItem(clinica);
            preencheClinica();

            boolean ferias = (boolean) model.getValueAt(row, 7);
            chkFerias.setEnabled(ferias);

            boolean demitido = (boolean) model.getValueAt(row, 7);
            chkDemitido.setEnabled(demitido);

            lastNome = nome;
            lastCro = cro;
            lastCroEstado = croEstado;
            lastDtAdmissao = dataAdmissao;
            lastDtDemissao = dataDemissao;
            lastFerias = ferias;
            lastDemitido = demitido;
            lastEndereco = endereco;
            lastClinica = clinica;
            lastFuncao = funcao;
            lastColaborador = new Colaborador(id, nome, funcao, cro, croEstado, dataAdmissao, dataDemissao, endereco, clinica, ferias, demitido);
        } catch (SQLException ex) {
            Logger.getLogger(FormCadastroColaborador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_grdColaboradorMouseClicked

    private void preencheFuncao() {
        cmbFuncao.removeAllItems();
        ArrayList<Funcao> funcoes = srvFuncao.getAll();
        for (Funcao funcao : funcoes) {
            cmbFuncao.addItem(funcao);
        }
    }

    private void preencheClinica() {
        cmbClinica.removeAllItems();
        ArrayList<Clinica> clinicas = srvClinica.getAll();
        for (Clinica clinica : clinicas) {
            cmbClinica.addItem(clinica);
        }
    }

    private void preencheGrid() throws SQLException {
        ArrayList<Colaborador> colaboradores = srvColaborador.getAll();

        Object colunas[] = {"Id", "Nome", "CRO", "CRO - UF", "Data de Admissão", "Data de Demissão", "Função", "Clínica", "Férias", "Demitido", "CEP", "Logradouro", "Bairro", "Cidade", "Estado", "País"};
        model = new DefaultTableModel(colunas, 0);
        for (Colaborador colaborador : colaboradores) {
            model.addRow(new Object[]{
                colaborador.getId(),
                colaborador.getNome(),
                colaborador.getCro(),
                colaborador.getCroEstado(),
                colaborador.getDataAdmissao(),
                colaborador.getDataDemissao(),
                colaborador.getFuncao(),
                colaborador.getClinica(),
                colaborador.isFerias(),
                colaborador.isDemitido(),
                colaborador.getEndereco(),
                colaborador.getEndereco().getLogradouro(),
                colaborador.getEndereco().getLogradouro().getBairro(),
                colaborador.getEndereco().getLogradouro().getBairro().getCidade(),
                colaborador.getEndereco().getLogradouro().getBairro().getCidade().getEstado(),
                colaborador.getEndereco().getLogradouro().getBairro().getCidade().getEstado().getPais()
            });
        }
        grdColaborador.setModel(model);
    }

    private void limpaCampos() {
        cmbEstado.removeAllItems();
        cmbCidade.removeAllItems();
        cmbBairro.removeAllItems();
        cmbLogradouro.removeAllItems();
        cmbEndereco.removeAllItems();

        txtNomeCompleto.setText("");
        ftxtCPF.setText("");
        ftxtRG.setText("");
        ftxtTelefone.setText("");
        ftxtCelular.setText("");
        txtNumero.setText("");
        chkDemitido.setEnabled(false); //REVER
        chkFerias.setEnabled(false);//REVER
    }

    private void deselecionaCombo() {
        cmbPais.setSelectedItem(null);
        cmbEstado.setSelectedItem(null);
        cmbCidade.setSelectedItem(null);
        cmbBairro.setSelectedItem(null);
        cmbLogradouro.setSelectedItem(null);
        cmbEndereco.setSelectedItem(null);
    }

    private void addAllListener() {
        addListenerPais();
        addListenerEstado();
        addListenerCidade();
        addListenerBairro();
        addListenerLogradouro();
    }

    private void preencheCombo() throws SQLException {
        limpaCampos();
        ArrayList<Pais> paises = srvPais.getAll();

        for (Pais pais : paises) {
            cmbPais.addItem(pais);
        }
        deselecionaCombo();
    }

    private void preenchePais() throws SQLException {
        cmbPais.removeAllItems();
        ArrayList<Pais> paises = srvPais.getAll();
        for (Pais pais : paises) {
            cmbPais.addItem(pais);
        }
    }

    private void preencheEstado() throws SQLException {
        cmbEstado.removeAllItems();
        ArrayList<Estado> estados = srvEstado.getByPais((Pais) cmbPais.getSelectedItem());
        for (Estado estado : estados) {
            cmbEstado.addItem(estado);
        }
    }

    private void preencheCidade() throws SQLException {
        cmbCidade.removeAllItems();
        ArrayList<Cidade> cidades = srvCidade.getByEstado((Estado) cmbEstado.getSelectedItem());
        for (Cidade cidade : cidades) {
            cmbCidade.addItem(cidade);
        }
    }

    private void preencheBairro() throws SQLException {
        cmbBairro.removeAllItems();
        ArrayList<Bairro> bairros = srvBairro.getByCidade((Cidade) cmbCidade.getSelectedItem());
        for (Bairro bairro : bairros) {
            cmbBairro.addItem(bairro);
        }
    }

    private void preencheLogradouro() throws SQLException {
        cmbLogradouro.removeAllItems();
        ArrayList<Logradouro> logradouros = srvLogradouro.getByBairro((Bairro) cmbBairro.getSelectedItem());
        for (Logradouro logradouro : logradouros) {
            cmbLogradouro.addItem(logradouro);
        }
    }

    private void preencheEndereco() throws SQLException {
        cmbEndereco.removeAllItems();
        ArrayList<Endereco> enderecos = srvEndereco.getByLogradouro((Logradouro) cmbLogradouro.getSelectedItem());
        for (Endereco endereco : enderecos) {
            cmbEndereco.addItem(endereco);
        }
    }

    private void addListenerPais() {
        cmbPais.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent eventoItem) {
                if (eventoItem.getStateChange() == ItemEvent.SELECTED) {
                    try {
                        preencheEstado();
                        cmbEstado.setSelectedItem(null);
                    } catch (SQLException ex) {
                        Logger.getLogger(FormCadastroLogradouro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }

    private void addListenerEstado() {
        cmbEstado.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent eventoItem) {
                if (eventoItem.getStateChange() == ItemEvent.SELECTED) {
                    try {
                        preencheCidade();
                        cmbCidade.setSelectedItem(null);
                    } catch (SQLException ex) {
                        Logger.getLogger(FormCadastroLogradouro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }

    private void addListenerCidade() {
        cmbCidade.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent eventoItem) {
                if (eventoItem.getStateChange() == ItemEvent.SELECTED) {
                    try {
                        preencheBairro();
                        cmbBairro.setSelectedItem(null);
                    } catch (SQLException ex) {
                        Logger.getLogger(FormCadastroLogradouro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }

    private void addListenerBairro() {
        cmbBairro.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent eventoItem) {
                if (eventoItem.getStateChange() == ItemEvent.SELECTED) {
                    try {
                        preencheLogradouro();
                        cmbLogradouro.setSelectedItem(null);
                    } catch (SQLException ex) {
                        Logger.getLogger(FormCadastroLogradouro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }

    private void addListenerLogradouro() {
        cmbLogradouro.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent eventoItem) {
                if (eventoItem.getStateChange() == ItemEvent.SELECTED) {
                    try {
                        preencheEndereco();
                        cmbEndereco.setSelectedItem(null);
                    } catch (SQLException ex) {
                        Logger.getLogger(FormCadastroLogradouro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadastroColaborador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadastroColaborador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadastroColaborador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadastroColaborador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadastroColaborador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox chkDemitido;
    private javax.swing.JCheckBox chkFerias;
    private javax.swing.JComboBox<Bairro> cmbBairro;
    private javax.swing.JComboBox<Cidade> cmbCidade;
    private javax.swing.JComboBox<Clinica> cmbClinica;
    private javax.swing.JComboBox<Estado> cmbEstado;
    private javax.swing.JComboBox<String> cmbEstadoCRO;
    private javax.swing.JComboBox<Funcao> cmbFuncao;
    private javax.swing.JComboBox<Logradouro> cmbLogradouro;
    private javax.swing.JComboBox<Pais> cmbPais;
    private javax.swing.JFormattedTextField ftxtCEP;
    private javax.swing.JFormattedTextField ftxtCRO;
    private javax.swing.JFormattedTextField ftxtCelular;
    private javax.swing.JFormattedTextField ftxtDataAdmissao;
    private javax.swing.JFormattedTextField ftxtDataDemissao;
    private javax.swing.JFormattedTextField ftxtTelefone;
    private javax.swing.JTable grdColaborador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMensagem;
    private javax.swing.JTextField txtNomeCompleto;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
